# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build HTML Documentation
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout stuff
        uses: actions/checkout@v3
       
      # We need a Ruby environment for asciidoctor
      - name: Setup Ruby, JRuby and TruffleRuby
        uses: ruby/setup-ruby@v1.110.0
        with:
          ruby-version: 3.0 # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Asciidoctor Setup
        # You may pin to the exact commit or the version.
        # uses: reitzig/actions-asciidoctor@7570212ae20b63653481675fb1ff62d1073632b0
        uses: reitzig/actions-asciidoctor@v2.0.0
        with:
          # The version of asciidoctor to install.
          version: 2.0.10 # optional, default is ~>2.0

      # state-machine-cat expects a Node environment
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.3.0
        with:
          # Set always-auth in npmrc.
          always-auth: false # optional, default is false
          # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
#          node-version: # optional
          # File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version.
#          node-version-file: # optional
          # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
#          architecture: # optional
          # Set this option if you want the action to check for the latest available version that satisfies the version spec.
#          check-latest: # optional
          # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
#          registry-url: # optional
          # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
#          scope: # optional
          # Used to pull node distributions from node-versions.  Since there's a default, this is typically not supplied by the user.
#          token: # optional, default is ${{ github.token }}
          # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
#          cache: # optional
          # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
#          cache-dependency-path: # optional

      - name: Install State Machine Cat
        run: npm install --location=global state-machine-cat
        
      - name: Verify smcat is working
        run: smcat --help
        
      - name: Install asciidoctor-diagram
        run: gem install asciidoctor-diagram
        
      - name: Gem things
        run: echo "gem 'asciidoctor-diagram'" > Gemfile

      - name: Exec bundler
        run: bundle

      - name: Run asciidoctor version command
        run: asciidoctor --version
